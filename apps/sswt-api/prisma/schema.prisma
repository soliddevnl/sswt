// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @default(autoincrement()) @id
  email         String   @unique
  name          String?
  workouts      Workout[]
  preferences   Preference[]
  profile       Profile?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Workout {
  id        Int      @default(autoincrement()) @id
  name      String
  date      DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  exercises Exercise[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Exercise {
  id        Int      @default(autoincrement()) @id
  name      String
  workout   Workout  @relation(fields: [workoutId], references: [id], onDelete: Cascade)
  workoutId Int
  sets      Set[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Set {
  id         Int      @default(autoincrement()) @id
  reps       Int
  weight     Int
  exercise   Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade)
  exerciseId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id     Int     @default(autoincrement()) @id
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
  weight Int
  height Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Preference {
  id            Int     @default(autoincrement()) @id
  user          User    @relation(fields: [userId], references: [id])
  userId        Int     @unique
  metricUnit    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}